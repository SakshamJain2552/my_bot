<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="simple_rover">

  <!-- 1) Base chassis -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="0.6 0.4 0.15"/>   <!-- length × width × height -->
      </geometry>
      <material name="gray"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.6 0.4 0.15"/>
      </geometry>
    </collision>
  </link>

  <!-- 2) Front caster assembly -->
  <!-- 2a) Caster “stem” (the red cylinder protruding from the body) -->
  <joint name="front_caster_stem_joint" type="fixed">
    <parent link="base_link"/>
    <child  link="front_caster_stem_link"/>
    <!-- position this at the front center, slightly below chassis mid‑height -->
    <origin xyz=" 0.3  0.0 -0.075" rpy="0 0 0"/>
  </joint>
  <link name="front_caster_stem_link">
    <visual>
      <geometry>
        <cylinder length="0.05" radius="0.01"/>  <!-- stem length & thickness -->
      </geometry>
      <material name="red"/>
    </visual>
  </link>

  <!-- 2b) Caster wheel joint (free‐spinning) -->
  <joint name="front_caster_wheel_joint" type="continuous">
    <parent link="front_caster_stem_link"/>
    <child  link="front_caster_wheel_link"/>
    <!-- wheel sits at the end of the stem -->
    <origin xyz="0 0 -0.025" rpy="0 0 0"/>  
    <axis  xyz="0 1 0"/>
  </joint>
  <link name="front_caster_wheel_link">
    <visual>
      <geometry>
        <cylinder length="0.04" radius="0.08"/>  <!-- wheel thickness & radius -->
      </geometry>
      <material name="red"/>
      <!-- rotate cylinder so its axis points along Y -->
      <origin rpy="0 0 1.5708"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.04" radius="0.08"/>
      </collision>
  </link>

  <!-- 3) Rear drive axle (one fixed axle for both back wheels) -->
  <joint name="rear_axle_joint" type="fixed">
    <parent link="base_link"/>
    <child  link="rear_axle_link"/>
    <!-- position it at the back -->
    <origin xyz="-0.3  0.0 -0.075" rpy="0 0 0"/>
  </joint>
  <link name="rear_axle_link">
    <visual>
      <geometry>
        <cylinder length="0.4" radius="0.01"/> 
      </geometry>
      <material name="red"/>
      <origin rpy="0 0 1.5708"/>
    </visual>
  </link>

  <!-- 4) Left & right drive wheels -->
  <joint name="rear_wheel_left_joint"  type="continuous">
    <parent link="rear_axle_link"/>
    <child  link="rear_wheel_left_link"/>
    <origin xyz="0  0.2 0" rpy="0 0 0"/>
    <axis  xyz="0 1 0"/>
  </joint>
  <link name="rear_wheel_left_link">
    <visual>
      <geometry>
        <cylinder length="0.05" radius="0.08"/>
      </geometry>
      <material name="red"/>
      <origin rpy="0 0 1.5708"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.05" radius="0.08"/>
      </collision>
  </link>

  <joint name="rear_wheel_right_joint" type="continuous">
    <parent link="rear_axle_link"/>
    <child  link="rear_wheel_right_link"/>
    <origin xyz="0 -0.2 0"  rpy="0 0 0"/>
    <axis  xyz="0 1 0"/>
  </joint>
  <link name="rear_wheel_right_link">
    <visual>
      <geometry>
        <cylinder length="0.05" radius="0.08"/>
      </geometry>
      <material name="red"/>
      <origin rpy="0 0 1.5708"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.05" radius="0.08"/>
      </collision>
  </link>

</robot>



# rsp.launch.py
import os

from launch import LaunchDescription
from launch.actions import ExecuteProcess
from launch.substitutions import Command, PathJoinSubstitution
from launch_ros.actions import Node
from launch_ros.substitutions import FindPackageShare

def generate_launch_description():
    pkg_share = FindPackageShare('my_bot').find('my_bot')

    return LaunchDescription([
        # 1) Publish your URDF on /robot_description
        Node(
            package='robot_state_publisher',
            executable='robot_state_publisher',
            name='robot_state_publisher',
            output='screen',
            parameters=[{
                'robot_description': Command([
                    'xacro ',
                    os.path.join(pkg_share, 'description', 'robot.urdf.xacro')
                ])
            }]
        ),

        # 2) Launch RViz2 with optional config
        Node(
            package='rviz2',
            executable='rviz2',
            name='rviz2',
            output='screen',
            arguments=[
                '-d',
                os.path.join(pkg_share, 'rviz', 'my_bot.rviz')
            ] if os.path.exists(
                os.path.join(pkg_share, 'rviz', 'my_bot.rviz')
            ) else []
        ),
    ])



ros2 launch my_bot rsp.launch.py
[INFO] [launch]: All log files can be found below /home/rover/.ros/log/2025-07-20-15-05-28-037799-myie-Vostro-5581-10688
[INFO] [launch]: Default logging verbosity is set to INFO
[ERROR] [launch]: Caught exception in launch (see debug for traceback): executed command failed. Command: xacro /home/rover/dev_ws/install/my_bot/share/my_bot/description/robot.urdf.xacro
Captured stderr output: XML parsing error: mismatched tag: line 56, column 8
when processing file: /home/rover/dev_ws/install/my_bot/share/my_bot/description/robot.urdf.xacro

Check that:
 - Your XML is well-formed
 - You have the xacro xmlns declaration: xmlns:xacro="http://www.ros.org/wiki/xacro"
